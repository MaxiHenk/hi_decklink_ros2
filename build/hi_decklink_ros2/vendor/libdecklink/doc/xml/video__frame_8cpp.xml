<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="video__frame_8cpp" kind="file" language="C++">
    <compoundname>video_frame.cpp</compoundname>
    <includes refid="errors_8hpp" local="yes">libdecklink/errors.hpp</includes>
    <includes refid="video__frame_8hpp" local="yes">libdecklink/video_frame.hpp</includes>
    <incdepgraph>
      <node id="7">
        <label>decklink_sdk/DeckLinkAPI.h</label>
        <link refid="_deck_link_a_p_i_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>DeckLinkAPIConfiguration.h</label>
        <link refid="_deck_link_a_p_i_configuration_8h"/>
      </node>
      <node id="14">
        <label>DeckLinkAPIDeckControl.h</label>
        <link refid="_deck_link_a_p_i_deck_control_8h"/>
      </node>
      <node id="12">
        <label>DeckLinkAPIDiscovery.h</label>
        <link refid="_deck_link_a_p_i_discovery_8h"/>
      </node>
      <node id="11">
        <label>DeckLinkAPIModes.h</label>
        <link refid="_deck_link_a_p_i_modes_8h"/>
      </node>
      <node id="10">
        <label>DeckLinkAPITypes.h</label>
        <link refid="_deck_link_a_p_i_types_8h"/>
      </node>
      <node id="9">
        <label>LinuxCOM.h</label>
        <link refid="_linux_c_o_m_8h"/>
      </node>
      <node id="2">
        <label>libdecklink/errors.hpp</label>
        <link refid="errors_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>libdecklink/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>libdecklink/video_frame.hpp</label>
        <link refid="video__frame_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/libdecklink/video_frame.cpp</label>
        <link refid="video__frame_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>array</label>
      </node>
      <node id="3">
        <label>boost/exception/all.hpp</label>
      </node>
      <node id="8">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_deck_link">DeckLink</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>tibo<sp/>on<sp/>30/01/18.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="errors_8hpp" kindref="compound">libdecklink/errors.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="video__frame_8hpp" kindref="compound">libdecklink/video_frame.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_deck_link" kindref="compound">DeckLink</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10" refid="class_deck_link_1_1_video_frame_1a09b1a352215dadac351040f24af833e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_video_frame_1a09b1a352215dadac351040f24af833e8" kindref="member">VideoFrame::VideoFrame</ref>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">IDeckLinkVideoFrame</ref><sp/>*<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">raw_frame</ref>)<sp/>:<sp/>_raw_frame(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">raw_frame</ref>)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>Nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16" refid="class_deck_link_1_1_video_frame_1abc248e5bcdfd3c90c09901f6389e9add" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_video_frame_1abc248e5bcdfd3c90c09901f6389e9add" kindref="member">VideoFrame::width</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_deck_link_1_1_video_frame_1aa629c9c8cc7973cd6a1e58b589348daf" kindref="member">_width</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_video_frame_1aa629c9c8cc7973cd6a1e58b589348daf" kindref="member">_width</ref><sp/>=<sp/><ref refid="class_deck_link_1_1_video_frame_1aa7269c29a030fe8063d20a6752ab2d02" kindref="member">_raw_frame</ref>-&gt;GetWidth();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_video_frame_1aa629c9c8cc7973cd6a1e58b589348daf" kindref="member">_width</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25" refid="class_deck_link_1_1_video_frame_1a6aa080189b183910eef998d804955497" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_video_frame_1a6aa080189b183910eef998d804955497" kindref="member">VideoFrame::height</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_deck_link_1_1_video_frame_1a5f05c4da22ef382619f9ddea2b174050" kindref="member">_height</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_video_frame_1a5f05c4da22ef382619f9ddea2b174050" kindref="member">_height</ref><sp/>=<sp/><ref refid="class_deck_link_1_1_video_frame_1aa7269c29a030fe8063d20a6752ab2d02" kindref="member">_raw_frame</ref>-&gt;GetHeight();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_video_frame_1a5f05c4da22ef382619f9ddea2b174050" kindref="member">_height</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34" refid="class_deck_link_1_1_video_frame_1a2e8f75f0577266d2d2637f0b4224a88c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_video_frame_1a2e8f75f0577266d2d2637f0b4224a88c" kindref="member">VideoFrame::row_bytes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_deck_link_1_1_video_frame_1a3b24bbb03e74ec6ea1dc5e5ff8b59adf" kindref="member">_row_bytes</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_video_frame_1a3b24bbb03e74ec6ea1dc5e5ff8b59adf" kindref="member">_row_bytes</ref><sp/>=<sp/><ref refid="class_deck_link_1_1_video_frame_1aa7269c29a030fe8063d20a6752ab2d02" kindref="member">_raw_frame</ref>-&gt;GetRowBytes();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_video_frame_1a3b24bbb03e74ec6ea1dc5e5ff8b59adf" kindref="member">_row_bytes</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43" refid="class_deck_link_1_1_video_frame_1a5998ebc13690356f9eee0f53f026297f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_video_frame_1a5998ebc13690356f9eee0f53f026297f" kindref="member">VideoFrame::size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/><ref refid="class_deck_link_1_1_video_frame_1a6aa080189b183910eef998d804955497" kindref="member">height</ref>()<sp/>*<sp/><ref refid="class_deck_link_1_1_video_frame_1a2e8f75f0577266d2d2637f0b4224a88c" kindref="member">row_bytes</ref>());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48" refid="class_deck_link_1_1_video_frame_1aba801632491524f83e0fcf244eba7df8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_deck_link_1ac3c2be721d795618876643d19110e511" kindref="member">PixelFormat</ref><sp/><ref refid="class_deck_link_1_1_video_frame_1aba801632491524f83e0fcf244eba7df8" kindref="member">VideoFrame::pixel_format</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_deck_link_1_1_video_frame_1ac6ebcc1542ff4b20061deaa5e065dbbb" kindref="member">_px_format</ref><sp/>==<sp/><ref refid="namespace_deck_link_1ac3c2be721d795618876643d19110e511a88183b946cc5f0e8c96b2e66e1c74a7e" kindref="member">PixelFormat::Unknown</ref>)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_video_frame_1ac6ebcc1542ff4b20061deaa5e065dbbb" kindref="member">_px_format</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_deck_link_1ac3c2be721d795618876643d19110e511" kindref="member">PixelFormat</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_video_frame_1aa7269c29a030fe8063d20a6752ab2d02" kindref="member">_raw_frame</ref>-&gt;GetPixelFormat());</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_video_frame_1ac6ebcc1542ff4b20061deaa5e065dbbb" kindref="member">_px_format</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="class_deck_link_1_1_video_frame_1aa02aac382c4e273131c86ed3f50f68c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_deck_link_1_1_video_frame_1aa02aac382c4e273131c86ed3f50f68c3" kindref="member">VideoFrame::bytes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_deck_link_1_1_video_frame_1a8af5d37f2d0193bda1015477e17ec13c" kindref="member">_frame_data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>=<sp/><ref refid="class_deck_link_1_1_video_frame_1aa7269c29a030fe8063d20a6752ab2d02" kindref="member">_raw_frame</ref>-&gt;GetBytes(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;<ref refid="class_deck_link_1_1_video_frame_1a8af5d37f2d0193bda1015477e17ec13c" kindref="member">_frame_data</ref>));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>!=<sp/><ref refid="_linux_c_o_m_8h_1a14bc2dfa42241600d567369cd25ddc70" kindref="member">S_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BOOST_THROW_EXCEPTION</ref>(<ref refid="struct_deck_link_1_1decklink__driver__error" kindref="compound">decklink_driver_error</ref>()</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1ad8d01de64a88790fae5052482007223a" kindref="member">errmsg</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>Error&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1adecbbd1d9d1d8b2a8e029e3ca23d8145" kindref="member">decklink_command</ref>(</highlight><highlight class="stringliteral">&quot;IDeckLinkVideoFrame::GetBytes&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1a09e9870449661e608f35fa3dc7732e90" kindref="member">decklink_error_code</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_deck_link_1aa7de3958a3ba62a453b649089d1b92d2" kindref="member">HResult</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref>))</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_video_frame_1a8af5d37f2d0193bda1015477e17ec13c" kindref="member">_frame_data</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74" refid="class_deck_link_1_1_video_frame_1afa87452ac58e5e014aa844db19be3d8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_deck_link_1_1_video_frame_1afa87452ac58e5e014aa844db19be3d8a" kindref="member">VideoFrame::timecode</ref>(<ref refid="namespace_deck_link_1acad148108e53f5e34b4c5db83dd6b2cc" kindref="member">TimecodeFormat</ref><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">format</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i_deck_link_timecode" kindref="compound">IDeckLinkTimecode</ref><sp/>*<ref refid="class_deck_link_1_1_video_frame_1afa87452ac58e5e014aa844db19be3d8a" kindref="member">timecode</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>=<sp/><ref refid="class_deck_link_1_1_video_frame_1aa7269c29a030fe8063d20a6752ab2d02" kindref="member">_raw_frame</ref>-&gt;GetTimecode(</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="_deck_link_a_p_i_8h_1a5da28af8331ff0615a832994f0b1357d" kindref="member">BMDTimecodeFormat</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">format</ref>),<sp/>&amp;<ref refid="class_deck_link_1_1_video_frame_1afa87452ac58e5e014aa844db19be3d8a" kindref="member">timecode</ref></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>!=<sp/><ref refid="_linux_c_o_m_8h_1a14bc2dfa42241600d567369cd25ddc70" kindref="member">S_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">errdesc</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref>)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_linux_c_o_m_8h_1a8f0547e641e1efc8110437fa85aa722e" kindref="member">E_FAIL</ref>:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">errdesc</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unexpected<sp/>Error&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_linux_c_o_m_8h_1a65014bcf210dc1cf3546e6edf65dcb4b" kindref="member">E_ACCESSDENIED</ref>:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">errdesc</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>invalid<sp/>or<sp/>unsupported<sp/>timecode<sp/>format<sp/>was<sp/>requested.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_linux_c_o_m_8h_1a0990a9e86fec4192280bdf000ed859c2" kindref="member">S_FALSE</ref>:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">errdesc</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>requested<sp/>timecode<sp/>format<sp/>was<sp/>not<sp/>present<sp/>or<sp/>valid<sp/>in<sp/>the<sp/>ancillary<sp/>data.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">errdesc</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>Error&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BOOST_THROW_EXCEPTION</ref>(<ref refid="struct_deck_link_1_1decklink__driver__error" kindref="compound">decklink_driver_error</ref>()</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1ad8d01de64a88790fae5052482007223a" kindref="member">errmsg</ref>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">errdesc</ref>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1adecbbd1d9d1d8b2a8e029e3ca23d8145" kindref="member">decklink_command</ref>(</highlight><highlight class="stringliteral">&quot;IDeckLinkVideoInputFrame::GetTimecode&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1a09e9870449661e608f35fa3dc7732e90" kindref="member">decklink_error_code</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_deck_link_1aa7de3958a3ba62a453b649089d1b92d2" kindref="member">HResult</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref>))</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">assert</ref>(<ref refid="class_deck_link_1_1_video_frame_1afa87452ac58e5e014aa844db19be3d8a" kindref="member">timecode</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">timecode_str</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>=<sp/><ref refid="class_deck_link_1_1_video_frame_1afa87452ac58e5e014aa844db19be3d8a" kindref="member">timecode</ref>-&gt;GetString(&amp;<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">timecode_str</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>!=<sp/><ref refid="_linux_c_o_m_8h_1a14bc2dfa42241600d567369cd25ddc70" kindref="member">S_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BOOST_THROW_EXCEPTION</ref>(<ref refid="struct_deck_link_1_1decklink__driver__error" kindref="compound">decklink_driver_error</ref>()</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1ad8d01de64a88790fae5052482007223a" kindref="member">errmsg</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>Error&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1adecbbd1d9d1d8b2a8e029e3ca23d8145" kindref="member">decklink_command</ref>(</highlight><highlight class="stringliteral">&quot;IDeckLinkTimecode::GetString&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1a09e9870449661e608f35fa3dc7732e90" kindref="member">decklink_error_code</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_deck_link_1aa7de3958a3ba62a453b649089d1b92d2" kindref="member">HResult</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref>))</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result_str</ref>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">timecode_str</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">free</ref>(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">timecode_str</ref>));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result_str</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124" refid="class_deck_link_1_1_video_frame_1a73d260b2f8670cfafb744ed34c158108" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="class_deck_link_1_1_video_frame_1a73d260b2f8670cfafb744ed34c158108" kindref="member">VideoFrame::start</ref>()<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_video_frame_1aa02aac382c4e273131c86ed3f50f68c3" kindref="member">bytes</ref>();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129" refid="class_deck_link_1_1_video_frame_1a436307aa1554af0619982bfd39641ed6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="class_deck_link_1_1_video_frame_1a436307aa1554af0619982bfd39641ed6" kindref="member">VideoFrame::end</ref>()<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_video_frame_1aa02aac382c4e273131c86ed3f50f68c3" kindref="member">bytes</ref>())<sp/>+<sp/>(<ref refid="class_deck_link_1_1_video_frame_1a2e8f75f0577266d2d2637f0b4224a88c" kindref="member">row_bytes</ref>()<sp/>*<sp/><ref refid="class_deck_link_1_1_video_frame_1a6aa080189b183910eef998d804955497" kindref="member">height</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/libdecklink/video_frame.cpp"/>
  </compounddef>
</doxygen>
