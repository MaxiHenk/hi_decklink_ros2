<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="device__input__interface_8cpp" kind="file" language="C++">
    <compoundname>device_input_interface.cpp</compoundname>
    <includes refid="device_8hpp" local="no">libdecklink/device.hpp</includes>
    <includes refid="types_8hpp" local="yes">libdecklink/types.hpp</includes>
    <includes refid="interface__helper_8hpp" local="yes">libdecklink/interface_helper.hpp</includes>
    <includes refid="device__input__interface_8hpp" local="yes">libdecklink/device_input_interface.hpp</includes>
    <incdepgraph>
      <node id="7">
        <label>decklink_sdk/DeckLinkAPI.h</label>
        <link refid="_deck_link_a_p_i_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>DeckLinkAPIConfiguration.h</label>
        <link refid="_deck_link_a_p_i_configuration_8h"/>
      </node>
      <node id="14">
        <label>DeckLinkAPIDeckControl.h</label>
        <link refid="_deck_link_a_p_i_deck_control_8h"/>
      </node>
      <node id="12">
        <label>DeckLinkAPIDiscovery.h</label>
        <link refid="_deck_link_a_p_i_discovery_8h"/>
      </node>
      <node id="11">
        <label>DeckLinkAPIModes.h</label>
        <link refid="_deck_link_a_p_i_modes_8h"/>
      </node>
      <node id="10">
        <label>DeckLinkAPITypes.h</label>
        <link refid="_deck_link_a_p_i_types_8h"/>
      </node>
      <node id="9">
        <label>LinuxCOM.h</label>
        <link refid="_linux_c_o_m_8h"/>
      </node>
      <node id="22">
        <label>libdecklink/bitmask.hpp</label>
        <link refid="bitmask_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>libdecklink/capture_callback.hpp</label>
        <link refid="capture__callback_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>libdecklink/decklink_handle_deleter.hpp</label>
        <link refid="decklink__handle__deleter_8hpp"/>
      </node>
      <node id="2">
        <label>libdecklink/device.hpp</label>
        <link refid="device_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>libdecklink/device_input_interface.hpp</label>
        <link refid="device__input__interface_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>libdecklink/device_output_interface.hpp</label>
        <link refid="device__output__interface_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>libdecklink/display_mode.hpp</label>
        <link refid="display__mode_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>libdecklink/dummy_reference_counted.hpp</label>
        <link refid="dummy__reference__counted_8hpp"/>
      </node>
      <node id="15">
        <label>libdecklink/errors.hpp</label>
        <link refid="errors_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>libdecklink/interface_helper.hpp</label>
        <link refid="interface__helper_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>libdecklink/notification_callback.hpp</label>
        <link refid="notification__callback_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>libdecklink/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>libdecklink/video_frame.hpp</label>
        <link refid="video__frame_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>libdecklink/video_input_frame.hpp</label>
        <link refid="video__input__frame_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>libdecklink/video_output_frame.hpp</label>
        <link refid="video__output__frame_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/libdecklink/device_input_interface.cpp</label>
        <link refid="device__input__interface_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>array</label>
      </node>
      <node id="16">
        <label>boost/exception/all.hpp</label>
      </node>
      <node id="6">
        <label>boost/noncopyable.hpp</label>
      </node>
      <node id="5">
        <label>boost/optional.hpp</label>
      </node>
      <node id="27">
        <label>functional</label>
      </node>
      <node id="24">
        <label>initializer_list</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="8">
        <label>stdint.h</label>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="23">
        <label>type_traits</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_deck_link">DeckLink</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>tibo<sp/>on<sp/>16/01/18.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="device_8hpp" kindref="compound">libdecklink/device.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8hpp" kindref="compound">libdecklink/types.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="interface__helper_8hpp" kindref="compound">libdecklink/interface_helper.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="device__input__interface_8hpp" kindref="compound">libdecklink/device_input_interface.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Public<sp/>Methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_deck_link" kindref="compound">DeckLink</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17" refid="class_deck_link_1_1_device_input_interface_1a523dd9f221e79ef08f558ba8aa86781f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_device_input_interface_1ac4b266a903425306ea6d8abcb2a4a43c" kindref="member">DeviceInputInterface::DeviceInputInterface</ref>(<ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref>&amp;&amp;<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">src</ref>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>std::move(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">src</ref>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22" refid="class_deck_link_1_1_device_input_interface_1a0e28b390cd8839340eaacf091a82e7c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref>&amp;<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a0e28b390cd8839340eaacf091a82e7c2" kindref="member">DeviceInputInterface::operator=</ref>(<ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref>&amp;&amp;<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">rhs</ref>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">rhs</ref>)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_callback<sp/>=<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">rhs</ref>._callback;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_callback._owner)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_callback._owner<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_parent_device<sp/>=<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">rhs</ref>._parent_device;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_enabled<sp/>=<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">rhs</ref>._enabled;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_impl<sp/>=<sp/>std::move(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">rhs</ref>._impl);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>to<sp/>disable<sp/>the<sp/>rhs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">rhs</ref>._parent_device<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">rhs</ref>._enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="class_deck_link_1_1_device_input_interface_1a02145622fcf8ca5745b9fb134733e89e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref>&amp;<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a02145622fcf8ca5745b9fb134733e89e" kindref="member">DeviceInputInterface::start</ref>()<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>)<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a22737f3b95d39249c4d374df7ef4073f" kindref="member">load_impl</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_deck_link_1_1_device_input_interface_1a63de3d487f06da2177b08e15de3e6c3c" kindref="member">_enabled</ref>)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_device_input_interface_1a55eecba1d1d0c262e67d4b6bd8572238" kindref="member">enable</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>-&gt;StartStreams();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="class_deck_link_1_1_device_input_interface_1afcffa8eba19212f1098428800f0c4dd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref>&amp;<sp/><ref refid="class_deck_link_1_1_device_input_interface_1afcffa8eba19212f1098428800f0c4dd2" kindref="member">DeviceInputInterface::pause</ref>()<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>)<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a22737f3b95d39249c4d374df7ef4073f" kindref="member">load_impl</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>=<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>-&gt;PauseStreams();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>!=<sp/><ref refid="_linux_c_o_m_8h_1a14bc2dfa42241600d567369cd25ddc70" kindref="member">S_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BOOST_THROW_EXCEPTION</ref>(<ref refid="struct_deck_link_1_1decklink__driver__error" kindref="compound">decklink_driver_error</ref>()</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1ad8d01de64a88790fae5052482007223a" kindref="member">errmsg</ref>(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>error&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1adecbbd1d9d1d8b2a8e029e3ca23d8145" kindref="member">decklink_command</ref>(</highlight><highlight class="stringliteral">&quot;IDeckLinkInput::PauseStreams&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1a09e9870449661e608f35fa3dc7732e90" kindref="member">decklink_error_code</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_deck_link_1aa7de3958a3ba62a453b649089d1b92d2" kindref="member">HResult</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref>))</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71" refid="class_deck_link_1_1_device_input_interface_1a6258347681e654678102b8e1afa0fd48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref>&amp;<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a6258347681e654678102b8e1afa0fd48" kindref="member">DeviceInputInterface::stop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>)<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a22737f3b95d39249c4d374df7ef4073f" kindref="member">load_impl</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>=<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>-&gt;StopStreams();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>E_ACCESSDENIED<sp/>means<sp/>that<sp/>the<sp/>stream<sp/>is<sp/>already<sp/>stopped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>!=<sp/><ref refid="_linux_c_o_m_8h_1a14bc2dfa42241600d567369cd25ddc70" kindref="member">S_OK</ref><sp/>&amp;&amp;<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>!=<sp/><ref refid="_linux_c_o_m_8h_1a65014bcf210dc1cf3546e6edf65dcb4b" kindref="member">E_ACCESSDENIED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BOOST_THROW_EXCEPTION</ref>(<ref refid="struct_deck_link_1_1decklink__driver__error" kindref="compound">decklink_driver_error</ref>()</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1ad8d01de64a88790fae5052482007223a" kindref="member">errmsg</ref>(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>error&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1adecbbd1d9d1d8b2a8e029e3ca23d8145" kindref="member">decklink_command</ref>(</highlight><highlight class="stringliteral">&quot;IDeckLinkInput::StopStreams&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1a09e9870449661e608f35fa3dc7732e90" kindref="member">decklink_error_code</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_deck_link_1aa7de3958a3ba62a453b649089d1b92d2" kindref="member">HResult</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref>))</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89" refid="class_deck_link_1_1_device_input_interface_1a22484a4b95e3ec5d597a4e274f9f1086" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref>&amp;<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a22484a4b95e3ec5d597a4e274f9f1086" kindref="member">DeviceInputInterface::flush</ref>()<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>)<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a22737f3b95d39249c4d374df7ef4073f" kindref="member">load_impl</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>=<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>-&gt;FlushStreams();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>!=<sp/><ref refid="_linux_c_o_m_8h_1a14bc2dfa42241600d567369cd25ddc70" kindref="member">S_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BOOST_THROW_EXCEPTION</ref>(<ref refid="struct_deck_link_1_1decklink__driver__error" kindref="compound">decklink_driver_error</ref>()</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1ad8d01de64a88790fae5052482007223a" kindref="member">errmsg</ref>(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>error&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1adecbbd1d9d1d8b2a8e029e3ca23d8145" kindref="member">decklink_command</ref>(</highlight><highlight class="stringliteral">&quot;IDeckLinkInput::FlushStreams&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1a09e9870449661e608f35fa3dc7732e90" kindref="member">decklink_error_code</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_deck_link_1aa7de3958a3ba62a453b649089d1b92d2" kindref="member">HResult</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref>))</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106" refid="class_deck_link_1_1_device_input_interface_1a55eecba1d1d0c262e67d4b6bd8572238" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref>&amp;<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a55eecba1d1d0c262e67d4b6bd8572238" kindref="member">DeviceInputInterface::enable</ref>()<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_deck_link_1_1_device_input_interface_1aa37240917bc18f36d686162b0d1f9e88" kindref="member">_parent_device</ref>-&gt;<ref refid="class_deck_link_1_1_device_1a04a505f6709319793705150ba96e3273" kindref="member">supports_input_format_detection</ref>())<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BOOST_THROW_EXCEPTION</ref>(<ref refid="struct_deck_link_1_1runtime__error" kindref="compound">runtime_error</ref>()</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1ad8d01de64a88790fae5052482007223a" kindref="member">errmsg</ref>(</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>device<sp/>does<sp/>not<sp/>support<sp/>automatic<sp/>input<sp/>format<sp/>detection.<sp/>The<sp/>input<sp/>must<sp/>be<sp/>enabled<sp/>manually.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1a783efbf4219a4d68f32686b5b3e92537" kindref="member">decklink_device</ref>(<ref refid="class_deck_link_1_1_device_input_interface_1aa37240917bc18f36d686162b0d1f9e88" kindref="member">_parent_device</ref>-&gt;<ref refid="class_deck_link_1_1_device_1a8f11d2d96bba5d9801e3f478e44a88cd" kindref="member">get_display_name</ref>())</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>automatic<sp/>format<sp/>detection<sp/>we<sp/>need<sp/>to<sp/>grab<sp/>a<sp/>valid<sp/>display<sp/>mode<sp/>and<sp/>pixel<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">display_modes</ref><sp/>=<sp/><ref refid="class_deck_link_1_1_device_input_interface_1af310be5db073c39e18be3b030878d797" kindref="member">get_all_supported_display_modes</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">display_modes</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BOOST_THROW_EXCEPTION</ref>(<ref refid="struct_deck_link_1_1runtime__error" kindref="compound">runtime_error</ref>()</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1ad8d01de64a88790fae5052482007223a" kindref="member">errmsg</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>input<sp/>device<sp/>has<sp/>no<sp/>supported<sp/>display<sp/>modes&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1a783efbf4219a4d68f32686b5b3e92537" kindref="member">decklink_device</ref>(<ref refid="class_deck_link_1_1_device_input_interface_1aa37240917bc18f36d686162b0d1f9e88" kindref="member">_parent_device</ref>-&gt;<ref refid="class_deck_link_1_1_device_1a8f11d2d96bba5d9801e3f478e44a88cd" kindref="member">get_display_name</ref>())</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">flags</ref><sp/>=<sp/><ref refid="namespace_deck_link_1a9a4ef26abcc91aa71e4b83b9620f25f4a7a1920d61156abc05a60135aefe8bc67" kindref="member">VideoInputFlags::Default</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_deck_link_1_1_device_input_interface_1aa37240917bc18f36d686162b0d1f9e88" kindref="member">_parent_device</ref>-&gt;<ref refid="class_deck_link_1_1_device_1a04a505f6709319793705150ba96e3273" kindref="member">supports_input_format_detection</ref>())</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">flags</ref><sp/>=<sp/><ref refid="namespace_deck_link_1a9a4ef26abcc91aa71e4b83b9620f25f4a28e9f371ec4e70cf2aa791df4063f6b4" kindref="member">VideoInputFlags::EnableFormatDetection</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">display_mode</ref><sp/>=<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">display_modes</ref>.front();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">pixel_formats</ref><sp/>=<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a01e581b949d3525fa2d5f017d8fd2f50" kindref="member">get_supported_pixel_formats</ref>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">display_mode</ref>.get_image_format());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>display<sp/>mode<sp/>is<sp/>supported<sp/>it<sp/>should<sp/>have<sp/>at<sp/>least<sp/>on<sp/>valid<sp/>pixel<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">assert</ref>(!<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">pixel_formats</ref>.empty());</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>can<sp/>enable<sp/>the<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_device_input_interface_1a55eecba1d1d0c262e67d4b6bd8572238" kindref="member">enable</ref>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">display_mode</ref>.get_image_format(),<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">pixel_formats</ref>.front(),<sp/>{<sp/>flags<sp/>});</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_device_input_interface_1a63de3d487f06da2177b08e15de3e6c3c" kindref="member">_enabled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142" refid="class_deck_link_1_1_device_input_interface_1a5a3fc63a995380f73c93916f6647ccc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref>&amp;<ref refid="class_deck_link_1_1_device_input_interface_1a55eecba1d1d0c262e67d4b6bd8572238" kindref="member">DeviceInputInterface::enable</ref>(</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_deck_link_1a2e9c9db98010bef3cbbd26d2df2c754c" kindref="member">ImageFormat</ref><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">image_format</ref>,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_deck_link_1ac3c2be721d795618876643d19110e511" kindref="member">PixelFormat</ref><sp/>pixel_format,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BitMask&lt;VideoInputFlags&gt;</ref>&amp;<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">flags</ref></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>)<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a22737f3b95d39249c4d374df7ef4073f" kindref="member">load_impl</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_deck_link_1aaa31b9d87a05180bd5d08e578343d5dc" kindref="member">DisplayModeSupport</ref><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">support</ref><sp/>=<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a197eb258d0e50f32443e78db994b45f9" kindref="member">supports_video_mode</ref>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">image_format</ref>,<sp/>pixel_format,<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">flags</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">support</ref><sp/>==<sp/><ref refid="namespace_deck_link_1aaa31b9d87a05180bd5d08e578343d5dca9ed2d871602556951e39f3cebd08d6cb" kindref="member">DisplayModeSupport::NotSupported</ref>)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BOOST_THROW_EXCEPTION</ref>(<ref refid="struct_deck_link_1_1runtime__error" kindref="compound">runtime_error</ref>()</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1ad8d01de64a88790fae5052482007223a" kindref="member">errmsg</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>desired<sp/>input<sp/>configuration<sp/>is<sp/>not<sp/>supported<sp/>on<sp/>this<sp/>device:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespace_deck_link_1_1_image_format___1a6970f0b5f74b8d95a81fdd47b13c02d9" kindref="member">ImageFormat_::pretty_print</ref>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">image_format</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespace_deck_link_1_1_pixel_format___1a085ba65d0c7907abc1efa5199961442b" kindref="member">PixelFormat_::pretty_print</ref>(pixel_format))</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1a783efbf4219a4d68f32686b5b3e92537" kindref="member">decklink_device</ref>(<ref refid="class_deck_link_1_1_device_input_interface_1aa37240917bc18f36d686162b0d1f9e88" kindref="member">_parent_device</ref>-&gt;<ref refid="class_deck_link_1_1_device_1a8f11d2d96bba5d9801e3f478e44a88cd" kindref="member">get_display_name</ref>())</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>=<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>-&gt;EnableVideoInput(</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="_deck_link_a_p_i_modes_8h_1a53a24da93c73653675b403e3b4b30a4a" kindref="member">BMDDisplayMode</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">image_format</ref>)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="_deck_link_a_p_i_modes_8h_1a679bdf9a5a67b5be80f3fc4fca5124af" kindref="member">BMDPixelFormat</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pixel_format)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="_deck_link_a_p_i_8h_1a3162248a86203006172604cae8edaf67" kindref="member">BMDVideoInputFlags</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">flags</ref>.<ref refid="class_deck_link_1_1_bit_mask_1ad388bf005812f3368c3328bb4298c4c2" kindref="member">bits</ref>())</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>!=<sp/><ref refid="_linux_c_o_m_8h_1a14bc2dfa42241600d567369cd25ddc70" kindref="member">S_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">errdesc</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref>)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_linux_c_o_m_8h_1a4a353a556e58b37d5d789574c97ec9bb" kindref="member">E_INVALIDARG</ref>:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">errdesc</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>video<sp/>mode,<sp/>pixel<sp/>format<sp/>or<sp/>flags&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_linux_c_o_m_8h_1a65014bcf210dc1cf3546e6edf65dcb4b" kindref="member">E_ACCESSDENIED</ref>:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">errdesc</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>access<sp/>the<sp/>hardware<sp/>or<sp/>input<sp/>stream<sp/>currently<sp/>active&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_linux_c_o_m_8h_1a3b3f182080f15d833d6a5590eafffade" kindref="member">E_OUTOFMEMORY</ref>:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">errdesc</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>create<sp/>a<sp/>new<sp/>frame&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">errdesc</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>error&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BOOST_THROW_EXCEPTION</ref>(<ref refid="struct_deck_link_1_1decklink__driver__error" kindref="compound">decklink_driver_error</ref>()</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1ad8d01de64a88790fae5052482007223a" kindref="member">errmsg</ref>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">errdesc</ref>)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1a783efbf4219a4d68f32686b5b3e92537" kindref="member">decklink_device</ref>(<ref refid="class_deck_link_1_1_device_input_interface_1aa37240917bc18f36d686162b0d1f9e88" kindref="member">_parent_device</ref>-&gt;<ref refid="class_deck_link_1_1_device_1a8f11d2d96bba5d9801e3f478e44a88cd" kindref="member">get_display_name</ref>())</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1adecbbd1d9d1d8b2a8e029e3ca23d8145" kindref="member">decklink_command</ref>(</highlight><highlight class="stringliteral">&quot;IDeckLinkVideoInput::EnableVideoInput&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_device_input_interface_1a63de3d487f06da2177b08e15de3e6c3c" kindref="member">_enabled</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191" refid="class_deck_link_1_1_device_input_interface_1a458be56e648227d286f27118f272e691" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref>&amp;<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a458be56e648227d286f27118f272e691" kindref="member">DeviceInputInterface::disable</ref>()<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>)<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a22737f3b95d39249c4d374df7ef4073f" kindref="member">load_impl</ref>();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>=<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>-&gt;DisableVideoInput();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>E_ACCESSDENIED<sp/>means<sp/>that<sp/>the<sp/>stream<sp/>is<sp/>already<sp/>stopped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>!=<sp/><ref refid="_linux_c_o_m_8h_1a14bc2dfa42241600d567369cd25ddc70" kindref="member">S_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BOOST_THROW_EXCEPTION</ref>(<ref refid="struct_deck_link_1_1decklink__driver__error" kindref="compound">decklink_driver_error</ref>()</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1ad8d01de64a88790fae5052482007223a" kindref="member">errmsg</ref>(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>stop<sp/>disable<sp/>video<sp/>input&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1adecbbd1d9d1d8b2a8e029e3ca23d8145" kindref="member">decklink_command</ref>(</highlight><highlight class="stringliteral">&quot;IDeckLinkInput::StopStreams&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1a783efbf4219a4d68f32686b5b3e92537" kindref="member">decklink_device</ref>(<ref refid="class_deck_link_1_1_device_input_interface_1aa37240917bc18f36d686162b0d1f9e88" kindref="member">_parent_device</ref>-&gt;<ref refid="class_deck_link_1_1_device_1a8f11d2d96bba5d9801e3f478e44a88cd" kindref="member">get_display_name</ref>())</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1a09e9870449661e608f35fa3dc7732e90" kindref="member">decklink_error_code</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_deck_link_1aa7de3958a3ba62a453b649089d1b92d2" kindref="member">HResult</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref>))</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210" refid="class_deck_link_1_1_device_input_interface_1a5d8c4843f93d8f3b0f6d40504d2b8cfd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref>&amp;<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a5d8c4843f93d8f3b0f6d40504d2b8cfd" kindref="member">DeviceInputInterface::set_callback</ref>(<ref refid="class_deck_link_1_1_capture_callback" kindref="compound">CaptureCallback</ref>&amp;&amp;<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">callback</ref>)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_device_input_interface_1a6258347681e654678102b8e1afa0fd48" kindref="member">stop</ref>();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_device_input_interface_1a2cc5dcf26b282229feef0c295f7adbd2" kindref="member">_callback</ref><sp/>=<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">callback</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_device_input_interface_1a2cc5dcf26b282229feef0c295f7adbd2" kindref="member">_callback</ref>.<ref refid="class_deck_link_1_1_capture_callback_1aaaacc4d8d869f5220eb65b3fcdcd433c" kindref="member">_owner</ref><sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">assert</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>=<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>-&gt;SetCallback(&amp;<ref refid="class_deck_link_1_1_device_input_interface_1a2cc5dcf26b282229feef0c295f7adbd2" kindref="member">_callback</ref>)<sp/>!=<sp/><ref refid="_linux_c_o_m_8h_1a14bc2dfa42241600d567369cd25ddc70" kindref="member">S_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BOOST_THROW_EXCEPTION</ref>(<ref refid="struct_deck_link_1_1decklink__driver__error" kindref="compound">decklink_driver_error</ref>()</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1ad8d01de64a88790fae5052482007223a" kindref="member">errmsg</ref>(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>set<sp/>callback&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1adecbbd1d9d1d8b2a8e029e3ca23d8145" kindref="member">decklink_command</ref>(</highlight><highlight class="stringliteral">&quot;IDeckLinkInput::SetCallback&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1a783efbf4219a4d68f32686b5b3e92537" kindref="member">decklink_device</ref>(<ref refid="class_deck_link_1_1_device_input_interface_1aa37240917bc18f36d686162b0d1f9e88" kindref="member">_parent_device</ref>-&gt;<ref refid="class_deck_link_1_1_device_1a8f11d2d96bba5d9801e3f478e44a88cd" kindref="member">get_display_name</ref>())</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1a09e9870449661e608f35fa3dc7732e90" kindref="member">decklink_error_code</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_deck_link_1aa7de3958a3ba62a453b649089d1b92d2" kindref="member">HResult</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref>))</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230" refid="class_deck_link_1_1_device_input_interface_1af310be5db073c39e18be3b030878d797" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;DisplayMode&gt;<sp/><ref refid="class_deck_link_1_1_device_input_interface_1af310be5db073c39e18be3b030878d797" kindref="member">DeviceInputInterface::get_all_supported_display_modes</ref>()<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>)<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a22737f3b95d39249c4d374df7ef4073f" kindref="member">load_impl</ref>();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;DisplayMode&gt;<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">display_modes</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i_deck_link_display_mode" kindref="compound">IDeckLinkDisplayMode</ref>*<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">mode</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i_deck_link_display_mode_iterator" kindref="compound">IDeckLinkDisplayModeIterator</ref>*<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">it</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>=<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>-&gt;GetDisplayModeIterator(&amp;<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">it</ref>)<sp/>!=<sp/><ref refid="_linux_c_o_m_8h_1a14bc2dfa42241600d567369cd25ddc70" kindref="member">S_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BOOST_THROW_EXCEPTION</ref>(<ref refid="struct_deck_link_1_1decklink__driver__error" kindref="compound">decklink_driver_error</ref>()</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1ad8d01de64a88790fae5052482007223a" kindref="member">errmsg</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>failure<sp/>when<sp/>calling<sp/>GetDisplayModeIterator&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1adecbbd1d9d1d8b2a8e029e3ca23d8145" kindref="member">decklink_command</ref>(</highlight><highlight class="stringliteral">&quot;IDeckLilnkInput::GetDisplayModeIterator&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1a783efbf4219a4d68f32686b5b3e92537" kindref="member">decklink_device</ref>(<ref refid="class_deck_link_1_1_device_input_interface_1aa37240917bc18f36d686162b0d1f9e88" kindref="member">_parent_device</ref>-&gt;<ref refid="class_deck_link_1_1_device_1a8f11d2d96bba5d9801e3f478e44a88cd" kindref="member">get_display_name</ref>())</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1a09e9870449661e608f35fa3dc7732e90" kindref="member">decklink_error_code</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_deck_link_1aa7de3958a3ba62a453b649089d1b92d2" kindref="member">HResult</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref>))</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">assert</ref>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">it</ref>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">it</ref>-&gt;Next(&amp;<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">mode</ref>)<sp/>==<sp/><ref refid="_linux_c_o_m_8h_1a14bc2dfa42241600d567369cd25ddc70" kindref="member">S_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">display_modes</ref>.emplace_back(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">mode</ref>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">display_modes</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256" refid="class_deck_link_1_1_device_input_interface_1a8989317f92e1f00ba0d698819cf90d11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_device_input_interface_1a8989317f92e1f00ba0d698819cf90d11" kindref="member">DeviceInputInterface::supports_pixel_format</ref>(</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_deck_link_1a2e9c9db98010bef3cbbd26d2df2c754c" kindref="member">ImageFormat</ref><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">image_format</ref>,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_deck_link_1ac3c2be721d795618876643d19110e511" kindref="member">PixelFormat</ref><sp/>pixel_format,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BitMask&lt;VideoInputFlags&gt;</ref>&amp;<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">flags</ref></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>)<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a22737f3b95d39249c4d374df7ef4073f" kindref="member">load_impl</ref>();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_deck_link_1aaa31b9d87a05180bd5d08e578343d5dc" kindref="member">DisplayModeSupport</ref><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">support</ref><sp/>=<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a197eb258d0e50f32443e78db994b45f9" kindref="member">supports_video_mode</ref>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">image_format</ref>,<sp/>pixel_format,<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">flags</ref>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Supported<sp/>can<sp/>be<sp/>SupportedWithConversion<sp/>or<sp/>Supported.<sp/>Both<sp/>are<sp/>OK<sp/>for<sp/>us</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">support</ref><sp/>!=<sp/><ref refid="namespace_deck_link_1aaa31b9d87a05180bd5d08e578343d5dca9ed2d871602556951e39f3cebd08d6cb" kindref="member">DisplayModeSupport::NotSupported</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270" refid="class_deck_link_1_1_device_input_interface_1a01e581b949d3525fa2d5f017d8fd2f50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;PixelFormat&gt;<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a01e581b949d3525fa2d5f017d8fd2f50" kindref="member">DeviceInputInterface::get_supported_pixel_formats</ref>(</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_deck_link_1a2e9c9db98010bef3cbbd26d2df2c754c" kindref="member">ImageFormat</ref><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">image_format</ref></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;PixelFormat&gt;<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">formats</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pixel_format:<sp/><ref refid="namespace_deck_link_1_1_pixel_format___1a8e6d67175be545c9eec41d5993f03503" kindref="member">PixelFormat_::Values</ref>)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixel_format<sp/>!=<sp/><ref refid="namespace_deck_link_1ac3c2be721d795618876643d19110e511a88183b946cc5f0e8c96b2e66e1c74a7e" kindref="member">PixelFormat::Unknown</ref><sp/>&amp;&amp;<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a8989317f92e1f00ba0d698819cf90d11" kindref="member">supports_pixel_format</ref>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">image_format</ref>,<sp/>pixel_format))</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">formats</ref>.push_back(pixel_format);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">formats</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>/<sp/>Output<sp/>Interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="287" refid="class_deck_link_1_1_device_input_interface_1aaf57a0fb40b052a6b2dee328b010e148" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">IDeckLinkInput</ref><sp/>*<ref refid="class_deck_link_1_1_device_input_interface_1aaf57a0fb40b052a6b2dee328b010e148" kindref="member">DeviceInputInterface::get_raw_device</ref>()<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">assert</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>)<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a22737f3b95d39249c4d374df7ef4073f" kindref="member">load_impl</ref>();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">assert</ref>(<ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>.get();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Protected<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299" refid="class_deck_link_1_1_device_input_interface_1ac957d337ba945a967b9b8de4afe494c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_device_input_interface_1ac4b266a903425306ea6d8abcb2a4a43c" kindref="member">DeviceInputInterface::DeviceInputInterface</ref>(<ref refid="class_deck_link_1_1_device" kindref="compound">Device</ref><sp/>*<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">parent_device</ref>)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>_parent_device(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">parent_device</ref>)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">parent_device</ref>)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BOOST_THROW_EXCEPTION</ref>(<ref refid="struct_deck_link_1_1null__pointer__error" kindref="compound">null_pointer_error</ref>()</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1ad8d01de64a88790fae5052482007223a" kindref="member">errmsg</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>create<sp/>an<sp/>input<sp/>device<sp/>from<sp/>a<sp/>null<sp/>pointer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310" refid="class_deck_link_1_1_device_input_interface_1a197eb258d0e50f32443e78db994b45f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_deck_link_1aaa31b9d87a05180bd5d08e578343d5dc" kindref="member">DisplayModeSupport</ref><sp/><ref refid="class_deck_link_1_1_device_input_interface_1a197eb258d0e50f32443e78db994b45f9" kindref="member">DeviceInputInterface::supports_video_mode</ref>(</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_deck_link_1a2e9c9db98010bef3cbbd26d2df2c754c" kindref="member">ImageFormat</ref><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">image_format</ref>,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_deck_link_1ac3c2be721d795618876643d19110e511" kindref="member">PixelFormat</ref><sp/>pixel_format,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BitMask&lt;VideoInputFlags&gt;</ref>&amp;<sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">flags</ref></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_deck_link_a_p_i_8h_1a5d14efad1af04ceadeba453b36d5baae" kindref="member">BMDDisplayModeSupport</ref><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">is_supported</ref>;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>=<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>-&gt;DoesSupportVideoMode(</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="_deck_link_a_p_i_modes_8h_1a53a24da93c73653675b403e3b4b30a4a" kindref="member">BMDDisplayMode</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">image_format</ref>)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="_deck_link_a_p_i_modes_8h_1a679bdf9a5a67b5be80f3fc4fca5124af" kindref="member">BMDPixelFormat</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pixel_format)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="_deck_link_a_p_i_8h_1a3162248a86203006172604cae8edaf67" kindref="member">BMDVideoInputFlags</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">flags</ref>.<ref refid="class_deck_link_1_1_bit_mask_1ad388bf005812f3368c3328bb4298c4c2" kindref="member">bits</ref>())</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>&amp;<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">is_supported</ref></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="comment">/*<sp/>resultDisplayMode<sp/>=<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref><sp/>!=<sp/><ref refid="_linux_c_o_m_8h_1a14bc2dfa42241600d567369cd25ddc70" kindref="member">S_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BOOST_THROW_EXCEPTION</ref>(<ref refid="struct_deck_link_1_1decklink__driver__error" kindref="compound">decklink_driver_error</ref>()</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1ad8d01de64a88790fae5052482007223a" kindref="member">errmsg</ref>(</highlight><highlight class="stringliteral">&quot;An<sp/>unknown<sp/>error<sp/>occured<sp/>whilst<sp/>calling<sp/>IDeckLinkInput::DoesSupportVideoMode<sp/>on<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespace_deck_link_1_1_image_format___1a6970f0b5f74b8d95a81fdd47b13c02d9" kindref="member">ImageFormat_::pretty_print</ref>(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">image_format</ref>))</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1a783efbf4219a4d68f32686b5b3e92537" kindref="member">decklink_device</ref>(<ref refid="class_deck_link_1_1_device_input_interface_1aa37240917bc18f36d686162b0d1f9e88" kindref="member">_parent_device</ref>-&gt;<ref refid="class_deck_link_1_1_device_1a8f11d2d96bba5d9801e3f478e44a88cd" kindref="member">get_display_name</ref>())</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_deck_link_1a09e9870449661e608f35fa3dc7732e90" kindref="member">decklink_error_code</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_deck_link_1aa7de3958a3ba62a453b649089d1b92d2" kindref="member">HResult</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">result</ref>))</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_deck_link_1aaa31b9d87a05180bd5d08e578343d5dc" kindref="member">DisplayModeSupport</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_deck_link_1_1_bit_mask" kindref="compound">is_supported</ref>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="336" refid="class_deck_link_1_1_device_input_interface_1a22737f3b95d39249c4d374df7ef4073f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_deck_link_1_1_device_input_interface_1a22737f3b95d39249c4d374df7ef4073f" kindref="member">DeviceInputInterface::load_impl</ref>()<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_deck_link_1a0a55750acfe1a3289b6496f546559dda" kindref="member">load_interface</ref>(</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_device_input_interface_1aa37240917bc18f36d686162b0d1f9e88" kindref="member">_parent_device</ref>-&gt;<ref refid="class_deck_link_1_1_device_1ab3cc84573caa601dcf1b264db06fd63e" kindref="member">_device_impl</ref>.get(),<sp/><ref refid="_deck_link_a_p_i_8h_1a0f0397f5ceba425e899e2b76210bf2a3" kindref="member">IID_IDeckLinkInput</ref>,<sp/><ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>,<sp/></highlight><highlight class="stringliteral">&quot;input&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">assert</ref>(<ref refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" kindref="member">_impl</ref>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/libdecklink/device_input_interface.cpp"/>
  </compounddef>
</doxygen>
