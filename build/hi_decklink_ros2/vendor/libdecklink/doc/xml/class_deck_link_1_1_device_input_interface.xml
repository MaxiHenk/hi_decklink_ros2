<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_deck_link_1_1_device_input_interface" kind="class" language="C++" prot="public">
    <compoundname>DeckLink::DeviceInputInterface</compoundname>
    <basecompoundref prot="private" virt="non-virtual">boost::noncopyable</basecompoundref>
    <includes refid="device__input__interface_8hpp" local="no">device_input_interface.hpp</includes>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_deck_link_1_1_device_input_interface_1a520fa05e0bf58785da428f7a0241eee2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">class</ref></type>
        <definition>friend class Device</definition>
        <argsstring></argsstring>
        <name>Device</name>
        <qualifiedname>DeckLink::DeviceInputInterface::Device</qualifiedname>
        <param>
          <type><ref refid="class_deck_link_1_1_device" kindref="compound">Device</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="24" column="22" bodyfile="include/libdecklink/device_input_interface.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_deck_link_1_1_device_input_interface_1aa37240917bc18f36d686162b0d1f9e88" prot="private" static="no" mutable="no">
        <type><ref refid="class_deck_link_1_1_device" kindref="compound">Device</ref> *</type>
        <definition>Device* DeckLink::DeviceInputInterface::_parent_device</definition>
        <argsstring></argsstring>
        <name>_parent_device</name>
        <qualifiedname>DeckLink::DeviceInputInterface::_parent_device</qualifiedname>
        <initializer>= <ref refid="class_deck_link_1_1_bit_mask" kindref="compound">nullptr</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="89" column="16" bodyfile="include/libdecklink/device_input_interface.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_deck_link_1_1_bit_mask" kindref="compound">IDeckLinkInput</ref>, <ref refid="struct_deck_link_1_1_i_deck_link_handle_deleter" kindref="compound">IDeckLinkHandleDeleter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;IDeckLinkInput, IDeckLinkHandleDeleter&gt; DeckLink::DeviceInputInterface::_impl</definition>
        <argsstring></argsstring>
        <name>_impl</name>
        <qualifiedname>DeckLink::DeviceInputInterface::_impl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="90" column="25" bodyfile="include/libdecklink/device_input_interface.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_deck_link_1_1_device_input_interface_1a63de3d487f06da2177b08e15de3e6c3c" prot="private" static="no" mutable="no">
        <type><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">bool</ref></type>
        <definition>bool DeckLink::DeviceInputInterface::_enabled</definition>
        <argsstring></argsstring>
        <name>_enabled</name>
        <qualifiedname>DeckLink::DeviceInputInterface::_enabled</qualifiedname>
        <initializer>= <ref refid="class_deck_link_1_1_bit_mask" kindref="compound">false</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="92" column="14" bodyfile="include/libdecklink/device_input_interface.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_deck_link_1_1_device_input_interface_1a2cc5dcf26b282229feef0c295f7adbd2" prot="private" static="no" mutable="no">
        <type><ref refid="class_deck_link_1_1_capture_callback" kindref="compound">CaptureCallback</ref></type>
        <definition>CaptureCallback DeckLink::DeviceInputInterface::_callback</definition>
        <argsstring></argsstring>
        <name>_callback</name>
        <qualifiedname>DeckLink::DeviceInputInterface::_callback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="94" column="25" bodyfile="include/libdecklink/device_input_interface.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_deck_link_1_1_device_input_interface_1a02145622fcf8ca5745b9fb134733e89e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref> &amp;</type>
        <definition>DeviceInputInterface &amp; DeckLink::DeviceInputInterface::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <qualifiedname>DeckLink::DeviceInputInterface::start</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="28" column="30" bodyfile="src/libdecklink/device_input_interface.cpp" bodystart="41" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_deck_link_1_1_device_input_interface_1afcffa8eba19212f1098428800f0c4dd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref> &amp;</type>
        <definition>DeviceInputInterface &amp; DeckLink::DeviceInputInterface::pause</definition>
        <argsstring>()</argsstring>
        <name>pause</name>
        <qualifiedname>DeckLink::DeviceInputInterface::pause</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="30" column="30" bodyfile="src/libdecklink/device_input_interface.cpp" bodystart="54" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_deck_link_1_1_device_input_interface_1a6258347681e654678102b8e1afa0fd48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref> &amp;</type>
        <definition>DeviceInputInterface &amp; DeckLink::DeviceInputInterface::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <qualifiedname>DeckLink::DeviceInputInterface::stop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="32" column="30" bodyfile="src/libdecklink/device_input_interface.cpp" bodystart="71" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_deck_link_1_1_device_input_interface_1a22484a4b95e3ec5d597a4e274f9f1086" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref> &amp;</type>
        <definition>DeviceInputInterface &amp; DeckLink::DeviceInputInterface::flush</definition>
        <argsstring>()</argsstring>
        <name>flush</name>
        <qualifiedname>DeckLink::DeviceInputInterface::flush</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="34" column="30" bodyfile="src/libdecklink/device_input_interface.cpp" bodystart="89" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_deck_link_1_1_device_input_interface_1a55eecba1d1d0c262e67d4b6bd8572238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref> &amp;</type>
        <definition>DeviceInputInterface &amp; DeckLink::DeviceInputInterface::enable</definition>
        <argsstring>()</argsstring>
        <name>enable</name>
        <qualifiedname>DeckLink::DeviceInputInterface::enable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="36" column="30" bodyfile="src/libdecklink/device_input_interface.cpp" bodystart="106" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_deck_link_1_1_device_input_interface_1a5a3fc63a995380f73c93916f6647ccc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref> &amp;</type>
        <definition>DeviceInputInterface &amp; DeckLink::DeviceInputInterface::enable</definition>
        <argsstring>(const ImageFormat image_format, const PixelFormat pixel_format, const BitMask&lt; VideoInputFlags &gt; &amp;flags={VideoInputFlags::Default})</argsstring>
        <name>enable</name>
        <qualifiedname>DeckLink::DeviceInputInterface::enable</qualifiedname>
        <param>
          <type><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">const</ref> <ref refid="namespace_deck_link_1a2e9c9db98010bef3cbbd26d2df2c754c" kindref="member">ImageFormat</ref></type>
          <declname>image_format</declname>
        </param>
        <param>
          <type><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">const</ref> <ref refid="namespace_deck_link_1ac3c2be721d795618876643d19110e511" kindref="member">PixelFormat</ref></type>
          <declname>pixel_format</declname>
        </param>
        <param>
          <type><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">const</ref> <ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BitMask</ref>&lt; <ref refid="namespace_deck_link_1a9a4ef26abcc91aa71e4b83b9620f25f4" kindref="member">VideoInputFlags</ref> &gt; &amp;</type>
          <declname>flags</declname>
          <defval>{<ref refid="namespace_deck_link_1a9a4ef26abcc91aa71e4b83b9620f25f4a7a1920d61156abc05a60135aefe8bc67" kindref="member">VideoInputFlags::Default</ref>}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="38" column="30" bodyfile="src/libdecklink/device_input_interface.cpp" bodystart="142" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_deck_link_1_1_device_input_interface_1a458be56e648227d286f27118f272e691" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref> &amp;</type>
        <definition>DeviceInputInterface &amp; DeckLink::DeviceInputInterface::disable</definition>
        <argsstring>()</argsstring>
        <name>disable</name>
        <qualifiedname>DeckLink::DeviceInputInterface::disable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="44" column="30" bodyfile="src/libdecklink/device_input_interface.cpp" bodystart="191" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="class_deck_link_1_1_device_input_interface_1a5d8c4843f93d8f3b0f6d40504d2b8cfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref> &amp;</type>
        <definition>DeviceInputInterface &amp; DeckLink::DeviceInputInterface::set_callback</definition>
        <argsstring>(CaptureCallback &amp;&amp;callback)</argsstring>
        <name>set_callback</name>
        <qualifiedname>DeckLink::DeviceInputInterface::set_callback</qualifiedname>
        <param>
          <type><ref refid="class_deck_link_1_1_capture_callback" kindref="compound">CaptureCallback</ref> &amp;&amp;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="46" column="30" bodyfile="src/libdecklink/device_input_interface.cpp" bodystart="210" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="class_deck_link_1_1_device_input_interface_1af310be5db073c39e18be3b030878d797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_deck_link_1_1_display_mode" kindref="compound">DisplayMode</ref> &gt;</type>
        <definition>std::vector&lt; DisplayMode &gt; DeckLink::DeviceInputInterface::get_all_supported_display_modes</definition>
        <argsstring>()</argsstring>
        <name>get_all_supported_display_modes</name>
        <qualifiedname>DeckLink::DeviceInputInterface::get_all_supported_display_modes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="48" column="21" bodyfile="src/libdecklink/device_input_interface.cpp" bodystart="230" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="class_deck_link_1_1_device_input_interface_1a8989317f92e1f00ba0d698819cf90d11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">bool</ref></type>
        <definition>bool DeckLink::DeviceInputInterface::supports_pixel_format</definition>
        <argsstring>(const ImageFormat image_format, const PixelFormat pixel_format, const BitMask&lt; VideoInputFlags &gt; &amp;flags={VideoInputFlags::Default})</argsstring>
        <name>supports_pixel_format</name>
        <qualifiedname>DeckLink::DeviceInputInterface::supports_pixel_format</qualifiedname>
        <param>
          <type><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">const</ref> <ref refid="namespace_deck_link_1a2e9c9db98010bef3cbbd26d2df2c754c" kindref="member">ImageFormat</ref></type>
          <declname>image_format</declname>
        </param>
        <param>
          <type><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">const</ref> <ref refid="namespace_deck_link_1ac3c2be721d795618876643d19110e511" kindref="member">PixelFormat</ref></type>
          <declname>pixel_format</declname>
        </param>
        <param>
          <type><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">const</ref> <ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BitMask</ref>&lt; <ref refid="namespace_deck_link_1a9a4ef26abcc91aa71e4b83b9620f25f4" kindref="member">VideoInputFlags</ref> &gt; &amp;</type>
          <declname>flags</declname>
          <defval>{<ref refid="namespace_deck_link_1a9a4ef26abcc91aa71e4b83b9620f25f4a7a1920d61156abc05a60135aefe8bc67" kindref="member">VideoInputFlags::Default</ref>}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="50" column="14" bodyfile="src/libdecklink/device_input_interface.cpp" bodystart="256" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="class_deck_link_1_1_device_input_interface_1a01e581b949d3525fa2d5f017d8fd2f50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_deck_link_1ac3c2be721d795618876643d19110e511" kindref="member">PixelFormat</ref> &gt;</type>
        <definition>std::vector&lt; PixelFormat &gt; DeckLink::DeviceInputInterface::get_supported_pixel_formats</definition>
        <argsstring>(const ImageFormat image_format)</argsstring>
        <name>get_supported_pixel_formats</name>
        <qualifiedname>DeckLink::DeviceInputInterface::get_supported_pixel_formats</qualifiedname>
        <param>
          <type><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">const</ref> <ref refid="namespace_deck_link_1a2e9c9db98010bef3cbbd26d2df2c754c" kindref="member">ImageFormat</ref></type>
          <declname>image_format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="56" column="21" bodyfile="src/libdecklink/device_input_interface.cpp" bodystart="270" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_deck_link_1_1_device_input_interface_1aaf57a0fb40b052a6b2dee328b010e148" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">IDeckLinkInput</ref> *</type>
        <definition>IDeckLinkInput * DeckLink::DeviceInputInterface::get_raw_device</definition>
        <argsstring>()</argsstring>
        <name>get_raw_device</name>
        <qualifiedname>DeckLink::DeviceInputInterface::get_raw_device</qualifiedname>
        <briefdescription>
<para>Get a raw pointer to the underlying device. </para>
        </briefdescription>
        <detaileddescription>
<para>This allows you to call additional methods that may not be wrapped by the <ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref> class.</para>
<para><simplesect kind="return"><para>A pointer to the device </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="67" column="24" bodyfile="src/libdecklink/device_input_interface.cpp" bodystart="287" bodyend="293"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_deck_link_1_1_device_input_interface_1ac4b266a903425306ea6d8abcb2a4a43c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DeckLink::DeviceInputInterface::DeviceInputInterface</definition>
        <argsstring>()</argsstring>
        <name>DeviceInputInterface</name>
        <qualifiedname>DeckLink::DeviceInputInterface::DeviceInputInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="71" column="9" bodyfile="include/libdecklink/device_input_interface.hpp" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_deck_link_1_1_device_input_interface_1ac957d337ba945a967b9b8de4afe494c2" prot="protected" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>DeckLink::DeviceInputInterface::DeviceInputInterface</definition>
        <argsstring>(Device *parent_device)</argsstring>
        <name>DeviceInputInterface</name>
        <qualifiedname>DeckLink::DeviceInputInterface::DeviceInputInterface</qualifiedname>
        <param>
          <type><ref refid="class_deck_link_1_1_device" kindref="compound">Device</ref> *</type>
          <declname>parent_device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="73" column="18" bodyfile="src/libdecklink/device_input_interface.cpp" bodystart="299" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="class_deck_link_1_1_device_input_interface_1a523dd9f221e79ef08f558ba8aa86781f" prot="protected" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>DeckLink::DeviceInputInterface::DeviceInputInterface</definition>
        <argsstring>(DeviceInputInterface &amp;&amp;src) noexcept</argsstring>
        <name>DeviceInputInterface</name>
        <qualifiedname>DeckLink::DeviceInputInterface::DeviceInputInterface</qualifiedname>
        <param>
          <type><ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref> &amp;&amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="75" column="9" bodyfile="src/libdecklink/device_input_interface.cpp" bodystart="17" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="class_deck_link_1_1_device_input_interface_1a0e28b390cd8839340eaacf091a82e7c2" prot="protected" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref> &amp;</type>
        <definition>DeviceInputInterface &amp; DeckLink::DeviceInputInterface::operator=</definition>
        <argsstring>(DeviceInputInterface &amp;&amp;rhs) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>DeckLink::DeviceInputInterface::operator=</qualifiedname>
        <param>
          <type><ref refid="class_deck_link_1_1_device_input_interface" kindref="compound">DeviceInputInterface</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="77" column="30" bodyfile="src/libdecklink/device_input_interface.cpp" bodystart="22" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_deck_link_1_1_device_input_interface_1a197eb258d0e50f32443e78db994b45f9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_deck_link_1aaa31b9d87a05180bd5d08e578343d5dc" kindref="member">DisplayModeSupport</ref></type>
        <definition>DisplayModeSupport DeckLink::DeviceInputInterface::supports_video_mode</definition>
        <argsstring>(const ImageFormat image_format, const PixelFormat pixel_format, const BitMask&lt; VideoInputFlags &gt; &amp;flags={VideoInputFlags::Default})</argsstring>
        <name>supports_video_mode</name>
        <qualifiedname>DeckLink::DeviceInputInterface::supports_video_mode</qualifiedname>
        <param>
          <type><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">const</ref> <ref refid="namespace_deck_link_1a2e9c9db98010bef3cbbd26d2df2c754c" kindref="member">ImageFormat</ref></type>
          <declname>image_format</declname>
        </param>
        <param>
          <type><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">const</ref> <ref refid="namespace_deck_link_1ac3c2be721d795618876643d19110e511" kindref="member">PixelFormat</ref></type>
          <declname>pixel_format</declname>
        </param>
        <param>
          <type><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">const</ref> <ref refid="class_deck_link_1_1_bit_mask" kindref="compound">BitMask</ref>&lt; <ref refid="namespace_deck_link_1a9a4ef26abcc91aa71e4b83b9620f25f4" kindref="member">VideoInputFlags</ref> &gt; &amp;</type>
          <declname>flags</declname>
          <defval>{<ref refid="namespace_deck_link_1a9a4ef26abcc91aa71e4b83b9620f25f4a7a1920d61156abc05a60135aefe8bc67" kindref="member">VideoInputFlags::Default</ref>}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="79" column="28" bodyfile="src/libdecklink/device_input_interface.cpp" bodystart="310" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="class_deck_link_1_1_device_input_interface_1a22737f3b95d39249c4d374df7ef4073f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_deck_link_1_1_bit_mask" kindref="compound">void</ref></type>
        <definition>void DeckLink::DeviceInputInterface::load_impl</definition>
        <argsstring>()</argsstring>
        <name>load_impl</name>
        <qualifiedname>DeckLink::DeviceInputInterface::load_impl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libdecklink/device_input_interface.hpp" line="85" column="14" bodyfile="src/libdecklink/device_input_interface.cpp" bodystart="336" bodyend="341"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>DeckLink::DeviceInputInterface</label>
        <link refid="class_deck_link_1_1_device_input_interface"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>boost::noncopyable</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>DeckLink::CaptureCallback</label>
        <link refid="class_deck_link_1_1_capture_callback"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>_owner</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>DeckLink::Device</label>
        <link refid="class_deck_link_1_1_device"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>_input_interface</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>_output_interface</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>_notification_callback</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>DeckLink::DeviceInputInterface</label>
        <link refid="class_deck_link_1_1_device_input_interface"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>_parent_device</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>_callback</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>DeckLink::DeviceOutputInterface</label>
        <link refid="class_deck_link_1_1_device_output_interface"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>_parent_device</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>DeckLink::NotificationCallback</label>
        <link refid="class_deck_link_1_1_notification_callback"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>_parent_device</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>IDeckLinkInputCallback</label>
      </node>
      <node id="6">
        <label>IDeckLinkNotificationCallback</label>
      </node>
      <node id="2">
        <label>boost::noncopyable</label>
      </node>
    </collaborationgraph>
    <location file="include/libdecklink/device_input_interface.hpp" line="22" column="5" bodyfile="include/libdecklink/device_input_interface.hpp" bodystart="22" bodyend="95"/>
    <listofallmembers>
      <member refid="class_deck_link_1_1_device_input_interface_1a2cc5dcf26b282229feef0c295f7adbd2" prot="private" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>_callback</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1a63de3d487f06da2177b08e15de3e6c3c" prot="private" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>_enabled</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1a1d4ff4c84f771e8ee0affd70131625ed" prot="private" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>_impl</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1aa37240917bc18f36d686162b0d1f9e88" prot="private" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>_parent_device</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1a520fa05e0bf58785da428f7a0241eee2" prot="private" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>Device</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1ac4b266a903425306ea6d8abcb2a4a43c" prot="protected" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>DeviceInputInterface</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1ac957d337ba945a967b9b8de4afe494c2" prot="protected" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>DeviceInputInterface</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1a523dd9f221e79ef08f558ba8aa86781f" prot="protected" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>DeviceInputInterface</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1a458be56e648227d286f27118f272e691" prot="public" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>disable</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1a55eecba1d1d0c262e67d4b6bd8572238" prot="public" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>enable</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1a5a3fc63a995380f73c93916f6647ccc8" prot="public" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>enable</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1a22484a4b95e3ec5d597a4e274f9f1086" prot="public" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>flush</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1af310be5db073c39e18be3b030878d797" prot="public" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>get_all_supported_display_modes</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1aaf57a0fb40b052a6b2dee328b010e148" prot="public" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>get_raw_device</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1a01e581b949d3525fa2d5f017d8fd2f50" prot="public" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>get_supported_pixel_formats</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1a22737f3b95d39249c4d374df7ef4073f" prot="protected" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>load_impl</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1a0e28b390cd8839340eaacf091a82e7c2" prot="protected" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>operator=</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1afcffa8eba19212f1098428800f0c4dd2" prot="public" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>pause</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1a5d8c4843f93d8f3b0f6d40504d2b8cfd" prot="public" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>set_callback</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1a02145622fcf8ca5745b9fb134733e89e" prot="public" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>start</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1a6258347681e654678102b8e1afa0fd48" prot="public" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>stop</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1a8989317f92e1f00ba0d698819cf90d11" prot="public" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>supports_pixel_format</name></member>
      <member refid="class_deck_link_1_1_device_input_interface_1a197eb258d0e50f32443e78db994b45f9" prot="protected" virt="non-virtual"><scope>DeckLink::DeviceInputInterface</scope><name>supports_video_mode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
