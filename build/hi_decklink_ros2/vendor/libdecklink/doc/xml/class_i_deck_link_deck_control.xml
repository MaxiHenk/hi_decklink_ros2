<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_i_deck_link_deck_control" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>IDeckLinkDeckControl</compoundname>
    <basecompoundref prot="public" virt="non-virtual">IUnknown</basecompoundref>
    <includes refid="_deck_link_a_p_i_deck_control_8h" local="no">DeckLinkAPIDeckControl.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a7e44ec8a24996e4d333e35ae7eb20d5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::Open</definition>
        <argsstring>(BMDTimeScale timeScale, BMDTimeValue timeValue, bool timecodeIsDropFrame, BMDDeckControlError *error)=0</argsstring>
        <name>Open</name>
        <qualifiedname>IDeckLinkDeckControl::Open</qualifiedname>
        <param>
          <type><ref refid="_deck_link_a_p_i_types_8h_1a93cd3314ee8f29f0407d34108cdfec10" kindref="member">BMDTimeScale</ref></type>
          <declname>timeScale</declname>
        </param>
        <param>
          <type><ref refid="_deck_link_a_p_i_types_8h_1a978812ad7ab5ee0a1a0bc3fc2babc01a" kindref="member">BMDTimeValue</ref></type>
          <declname>timeValue</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>timecodeIsDropFrame</declname>
        </param>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="169" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1af4c6330885bf5f81f54ddbcddb65c705" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::Close</definition>
        <argsstring>(bool standbyOn)=0</argsstring>
        <name>Close</name>
        <qualifiedname>IDeckLinkDeckControl::Close</qualifiedname>
        <param>
          <type>bool</type>
          <declname>standbyOn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="170" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a33f9fcd2b6e41c2eaed7c792aff4f33f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::GetCurrentState</definition>
        <argsstring>(BMDDeckControlMode *mode, BMDDeckControlVTRControlState *vtrControlState, BMDDeckControlStatusFlags *flags)=0</argsstring>
        <name>GetCurrentState</name>
        <qualifiedname>IDeckLinkDeckControl::GetCurrentState</qualifiedname>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1ae43fccb6d5f8a3cdad00f977171bbdd3" kindref="member">BMDDeckControlMode</ref> *</type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a5da57101e626754ad24932a2b602451c" kindref="member">BMDDeckControlVTRControlState</ref> *</type>
          <declname>vtrControlState</declname>
        </param>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a831fd98518e5e27e9db35e23a29ea256" kindref="member">BMDDeckControlStatusFlags</ref> *</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="171" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1aa5c9db29fba068aa8142cf459ed229ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::SetStandby</definition>
        <argsstring>(bool standbyOn)=0</argsstring>
        <name>SetStandby</name>
        <qualifiedname>IDeckLinkDeckControl::SetStandby</qualifiedname>
        <param>
          <type>bool</type>
          <declname>standbyOn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="172" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a1b181aa849ad54aac4b7ed4493cb0ed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::SendCommand</definition>
        <argsstring>(uint8_t *inBuffer, uint32_t inBufferSize, uint8_t *outBuffer, uint32_t *outDataSize, uint32_t outBufferSize, BMDDeckControlError *error)=0</argsstring>
        <name>SendCommand</name>
        <qualifiedname>IDeckLinkDeckControl::SendCommand</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>inBuffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>inBufferSize</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>outBuffer</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>outDataSize</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>outBufferSize</declname>
        </param>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="173" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a4aa843fcf80d20354cb21757c9033f8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::Play</definition>
        <argsstring>(BMDDeckControlError *error)=0</argsstring>
        <name>Play</name>
        <qualifiedname>IDeckLinkDeckControl::Play</qualifiedname>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="174" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1aed06f50a507b729aec093b8071361709" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::Stop</definition>
        <argsstring>(BMDDeckControlError *error)=0</argsstring>
        <name>Stop</name>
        <qualifiedname>IDeckLinkDeckControl::Stop</qualifiedname>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="175" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1aa4e7bab7aff00b8b8e5b9e095d83d771" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::TogglePlayStop</definition>
        <argsstring>(BMDDeckControlError *error)=0</argsstring>
        <name>TogglePlayStop</name>
        <qualifiedname>IDeckLinkDeckControl::TogglePlayStop</qualifiedname>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="176" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a02143629855b317dc09b8eaacd8af9cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::Eject</definition>
        <argsstring>(BMDDeckControlError *error)=0</argsstring>
        <name>Eject</name>
        <qualifiedname>IDeckLinkDeckControl::Eject</qualifiedname>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="177" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1aeb089cd078d179358be3b443740c4ea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::GoToTimecode</definition>
        <argsstring>(BMDTimecodeBCD timecode, BMDDeckControlError *error)=0</argsstring>
        <name>GoToTimecode</name>
        <qualifiedname>IDeckLinkDeckControl::GoToTimecode</qualifiedname>
        <param>
          <type><ref refid="_deck_link_a_p_i_types_8h_1a951c378ef799c5a2b433089a8f814085" kindref="member">BMDTimecodeBCD</ref></type>
          <declname>timecode</declname>
        </param>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="178" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a65ad73a5b47878d4a1e472be252da3a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::FastForward</definition>
        <argsstring>(bool viewTape, BMDDeckControlError *error)=0</argsstring>
        <name>FastForward</name>
        <qualifiedname>IDeckLinkDeckControl::FastForward</qualifiedname>
        <param>
          <type>bool</type>
          <declname>viewTape</declname>
        </param>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="179" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a5e1c9dd3235fc4e25e60e7866cbce050" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::Rewind</definition>
        <argsstring>(bool viewTape, BMDDeckControlError *error)=0</argsstring>
        <name>Rewind</name>
        <qualifiedname>IDeckLinkDeckControl::Rewind</qualifiedname>
        <param>
          <type>bool</type>
          <declname>viewTape</declname>
        </param>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="180" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1aafce062dde838c3e2cc6cae60efd6124" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::StepForward</definition>
        <argsstring>(BMDDeckControlError *error)=0</argsstring>
        <name>StepForward</name>
        <qualifiedname>IDeckLinkDeckControl::StepForward</qualifiedname>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="181" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1ae1d670ea7c1bde0321a7b651fb4e55a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::StepBack</definition>
        <argsstring>(BMDDeckControlError *error)=0</argsstring>
        <name>StepBack</name>
        <qualifiedname>IDeckLinkDeckControl::StepBack</qualifiedname>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="182" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a0d27fd70d8554a2f7e37605023bda975" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::Jog</definition>
        <argsstring>(double rate, BMDDeckControlError *error)=0</argsstring>
        <name>Jog</name>
        <qualifiedname>IDeckLinkDeckControl::Jog</qualifiedname>
        <param>
          <type>double</type>
          <declname>rate</declname>
        </param>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="183" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a71022cbeb015a39b06a096b252a000dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::Shuttle</definition>
        <argsstring>(double rate, BMDDeckControlError *error)=0</argsstring>
        <name>Shuttle</name>
        <qualifiedname>IDeckLinkDeckControl::Shuttle</qualifiedname>
        <param>
          <type>double</type>
          <declname>rate</declname>
        </param>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="184" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a87bdbffa29bea645979e9c407b86970a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::GetTimecodeString</definition>
        <argsstring>(const char **currentTimeCode, BMDDeckControlError *error)=0</argsstring>
        <name>GetTimecodeString</name>
        <qualifiedname>IDeckLinkDeckControl::GetTimecodeString</qualifiedname>
        <param>
          <type>const char **</type>
          <declname>currentTimeCode</declname>
        </param>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="185" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a5e29ed8055d776f14c41881e3deec64c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::GetTimecode</definition>
        <argsstring>(IDeckLinkTimecode **currentTimecode, BMDDeckControlError *error)=0</argsstring>
        <name>GetTimecode</name>
        <qualifiedname>IDeckLinkDeckControl::GetTimecode</qualifiedname>
        <param>
          <type><ref refid="class_i_deck_link_timecode" kindref="compound">IDeckLinkTimecode</ref> **</type>
          <declname>currentTimecode</declname>
        </param>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="186" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a0a90cd239087e764e1d5d0c37edc5222" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::GetTimecodeBCD</definition>
        <argsstring>(BMDTimecodeBCD *currentTimecode, BMDDeckControlError *error)=0</argsstring>
        <name>GetTimecodeBCD</name>
        <qualifiedname>IDeckLinkDeckControl::GetTimecodeBCD</qualifiedname>
        <param>
          <type><ref refid="_deck_link_a_p_i_types_8h_1a951c378ef799c5a2b433089a8f814085" kindref="member">BMDTimecodeBCD</ref> *</type>
          <declname>currentTimecode</declname>
        </param>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="187" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a26f722a5525a87cda0b1d41252d4e2dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::SetPreroll</definition>
        <argsstring>(uint32_t prerollSeconds)=0</argsstring>
        <name>SetPreroll</name>
        <qualifiedname>IDeckLinkDeckControl::SetPreroll</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>prerollSeconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="188" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1aa2693afe0a7e942ff78d82de4e3a9a1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::GetPreroll</definition>
        <argsstring>(uint32_t *prerollSeconds)=0</argsstring>
        <name>GetPreroll</name>
        <qualifiedname>IDeckLinkDeckControl::GetPreroll</qualifiedname>
        <param>
          <type>uint32_t *</type>
          <declname>prerollSeconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="189" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a99c2cf551f63076735c9d75765e67560" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::SetExportOffset</definition>
        <argsstring>(int32_t exportOffsetFields)=0</argsstring>
        <name>SetExportOffset</name>
        <qualifiedname>IDeckLinkDeckControl::SetExportOffset</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>exportOffsetFields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="190" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a8b8ded0f164f73b991f1c136d6df45a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::GetExportOffset</definition>
        <argsstring>(int32_t *exportOffsetFields)=0</argsstring>
        <name>GetExportOffset</name>
        <qualifiedname>IDeckLinkDeckControl::GetExportOffset</qualifiedname>
        <param>
          <type>int32_t *</type>
          <declname>exportOffsetFields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="191" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a8d2d668d9e9be3c782fd7cf24a520c05" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::GetManualExportOffset</definition>
        <argsstring>(int32_t *deckManualExportOffsetFields)=0</argsstring>
        <name>GetManualExportOffset</name>
        <qualifiedname>IDeckLinkDeckControl::GetManualExportOffset</qualifiedname>
        <param>
          <type>int32_t *</type>
          <declname>deckManualExportOffsetFields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="192" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1adec03d5fa751357233eba5696fe0a010" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::SetCaptureOffset</definition>
        <argsstring>(int32_t captureOffsetFields)=0</argsstring>
        <name>SetCaptureOffset</name>
        <qualifiedname>IDeckLinkDeckControl::SetCaptureOffset</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>captureOffsetFields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="193" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a6a7949fe17fe4f5c85c6f43398689b95" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::GetCaptureOffset</definition>
        <argsstring>(int32_t *captureOffsetFields)=0</argsstring>
        <name>GetCaptureOffset</name>
        <qualifiedname>IDeckLinkDeckControl::GetCaptureOffset</qualifiedname>
        <param>
          <type>int32_t *</type>
          <declname>captureOffsetFields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="194" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a36a1cff08e16737e4fd381128b6ccbc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::StartExport</definition>
        <argsstring>(BMDTimecodeBCD inTimecode, BMDTimecodeBCD outTimecode, BMDDeckControlExportModeOpsFlags exportModeOps, BMDDeckControlError *error)=0</argsstring>
        <name>StartExport</name>
        <qualifiedname>IDeckLinkDeckControl::StartExport</qualifiedname>
        <param>
          <type><ref refid="_deck_link_a_p_i_types_8h_1a951c378ef799c5a2b433089a8f814085" kindref="member">BMDTimecodeBCD</ref></type>
          <declname>inTimecode</declname>
        </param>
        <param>
          <type><ref refid="_deck_link_a_p_i_types_8h_1a951c378ef799c5a2b433089a8f814085" kindref="member">BMDTimecodeBCD</ref></type>
          <declname>outTimecode</declname>
        </param>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a304e31f2ff7508bb69a8712fe13227e5" kindref="member">BMDDeckControlExportModeOpsFlags</ref></type>
          <declname>exportModeOps</declname>
        </param>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="195" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1af255a1883247753f24e17aafb6ffa6d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::StartCapture</definition>
        <argsstring>(bool useVITC, BMDTimecodeBCD inTimecode, BMDTimecodeBCD outTimecode, BMDDeckControlError *error)=0</argsstring>
        <name>StartCapture</name>
        <qualifiedname>IDeckLinkDeckControl::StartCapture</qualifiedname>
        <param>
          <type>bool</type>
          <declname>useVITC</declname>
        </param>
        <param>
          <type><ref refid="_deck_link_a_p_i_types_8h_1a951c378ef799c5a2b433089a8f814085" kindref="member">BMDTimecodeBCD</ref></type>
          <declname>inTimecode</declname>
        </param>
        <param>
          <type><ref refid="_deck_link_a_p_i_types_8h_1a951c378ef799c5a2b433089a8f814085" kindref="member">BMDTimecodeBCD</ref></type>
          <declname>outTimecode</declname>
        </param>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="196" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1aacb1ac731a343e2b53a39f6f6fc131da" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::GetDeviceID</definition>
        <argsstring>(uint16_t *deviceId, BMDDeckControlError *error)=0</argsstring>
        <name>GetDeviceID</name>
        <qualifiedname>IDeckLinkDeckControl::GetDeviceID</qualifiedname>
        <param>
          <type>uint16_t *</type>
          <declname>deviceId</declname>
        </param>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="197" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1acfa8419fd21b17dfbc095dbf4f513331" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::Abort</definition>
        <argsstring>(void)=0</argsstring>
        <name>Abort</name>
        <qualifiedname>IDeckLinkDeckControl::Abort</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="198" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a5f11d4193795f2d01540b70dc9ac897e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::CrashRecordStart</definition>
        <argsstring>(BMDDeckControlError *error)=0</argsstring>
        <name>CrashRecordStart</name>
        <qualifiedname>IDeckLinkDeckControl::CrashRecordStart</qualifiedname>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="199" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a746644a150718de5a748849dc8fe2d35" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::CrashRecordStop</definition>
        <argsstring>(BMDDeckControlError *error)=0</argsstring>
        <name>CrashRecordStop</name>
        <qualifiedname>IDeckLinkDeckControl::CrashRecordStop</qualifiedname>
        <param>
          <type><ref refid="_deck_link_a_p_i_deck_control_8h_1a45025a18396a5e1ceb051b86039c88d5" kindref="member">BMDDeckControlError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="200" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a2b7e88df7d556d594ac44bfb50b4706b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="_linux_c_o_m_8h_1a570a903331bed6f464de16e2b037f108" kindref="member">HRESULT</ref></type>
        <definition>virtual HRESULT IDeckLinkDeckControl::SetCallback</definition>
        <argsstring>(IDeckLinkDeckControlStatusCallback *callback)=0</argsstring>
        <name>SetCallback</name>
        <qualifiedname>IDeckLinkDeckControl::SetCallback</qualifiedname>
        <param>
          <type><ref refid="class_i_deck_link_deck_control_status_callback" kindref="compound">IDeckLinkDeckControlStatusCallback</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="201" column="21"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_i_deck_link_deck_control_1a09b1158b2515a6c0b9ca5d4ea2611f47" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual IDeckLinkDeckControl::~IDeckLinkDeckControl</definition>
        <argsstring>()</argsstring>
        <name>~IDeckLinkDeckControl</name>
        <qualifiedname>IDeckLinkDeckControl::~IDeckLinkDeckControl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="204" column="13" bodyfile="include/decklink_sdk/DeckLinkAPIDeckControl.h" bodystart="204" bodyend="204"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>IDeckLinkDeckControl</label>
        <link refid="class_i_deck_link_deck_control"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>IUnknown</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>IDeckLinkDeckControl</label>
        <link refid="class_i_deck_link_deck_control"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>IUnknown</label>
      </node>
    </collaborationgraph>
    <location file="include/decklink_sdk/DeckLinkAPIDeckControl.h" line="166" column="1" bodyfile="include/decklink_sdk/DeckLinkAPIDeckControl.h" bodystart="167" bodyend="205"/>
    <listofallmembers>
      <member refid="class_i_deck_link_deck_control_1acfa8419fd21b17dfbc095dbf4f513331" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>Abort</name></member>
      <member refid="class_i_deck_link_deck_control_1af4c6330885bf5f81f54ddbcddb65c705" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>Close</name></member>
      <member refid="class_i_deck_link_deck_control_1a5f11d4193795f2d01540b70dc9ac897e" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>CrashRecordStart</name></member>
      <member refid="class_i_deck_link_deck_control_1a746644a150718de5a748849dc8fe2d35" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>CrashRecordStop</name></member>
      <member refid="class_i_deck_link_deck_control_1a02143629855b317dc09b8eaacd8af9cf" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>Eject</name></member>
      <member refid="class_i_deck_link_deck_control_1a65ad73a5b47878d4a1e472be252da3a6" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>FastForward</name></member>
      <member refid="class_i_deck_link_deck_control_1a6a7949fe17fe4f5c85c6f43398689b95" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>GetCaptureOffset</name></member>
      <member refid="class_i_deck_link_deck_control_1a33f9fcd2b6e41c2eaed7c792aff4f33f" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>GetCurrentState</name></member>
      <member refid="class_i_deck_link_deck_control_1aacb1ac731a343e2b53a39f6f6fc131da" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>GetDeviceID</name></member>
      <member refid="class_i_deck_link_deck_control_1a8b8ded0f164f73b991f1c136d6df45a1" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>GetExportOffset</name></member>
      <member refid="class_i_deck_link_deck_control_1a8d2d668d9e9be3c782fd7cf24a520c05" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>GetManualExportOffset</name></member>
      <member refid="class_i_deck_link_deck_control_1aa2693afe0a7e942ff78d82de4e3a9a1d" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>GetPreroll</name></member>
      <member refid="class_i_deck_link_deck_control_1a5e29ed8055d776f14c41881e3deec64c" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>GetTimecode</name></member>
      <member refid="class_i_deck_link_deck_control_1a0a90cd239087e764e1d5d0c37edc5222" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>GetTimecodeBCD</name></member>
      <member refid="class_i_deck_link_deck_control_1a87bdbffa29bea645979e9c407b86970a" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>GetTimecodeString</name></member>
      <member refid="class_i_deck_link_deck_control_1aeb089cd078d179358be3b443740c4ea1" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>GoToTimecode</name></member>
      <member refid="class_i_deck_link_deck_control_1a0d27fd70d8554a2f7e37605023bda975" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>Jog</name></member>
      <member refid="class_i_deck_link_deck_control_1a7e44ec8a24996e4d333e35ae7eb20d5f" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>Open</name></member>
      <member refid="class_i_deck_link_deck_control_1a4aa843fcf80d20354cb21757c9033f8a" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>Play</name></member>
      <member refid="class_i_deck_link_deck_control_1a5e1c9dd3235fc4e25e60e7866cbce050" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>Rewind</name></member>
      <member refid="class_i_deck_link_deck_control_1a1b181aa849ad54aac4b7ed4493cb0ed9" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>SendCommand</name></member>
      <member refid="class_i_deck_link_deck_control_1a2b7e88df7d556d594ac44bfb50b4706b" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>SetCallback</name></member>
      <member refid="class_i_deck_link_deck_control_1adec03d5fa751357233eba5696fe0a010" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>SetCaptureOffset</name></member>
      <member refid="class_i_deck_link_deck_control_1a99c2cf551f63076735c9d75765e67560" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>SetExportOffset</name></member>
      <member refid="class_i_deck_link_deck_control_1a26f722a5525a87cda0b1d41252d4e2dc" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>SetPreroll</name></member>
      <member refid="class_i_deck_link_deck_control_1aa5c9db29fba068aa8142cf459ed229ac" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>SetStandby</name></member>
      <member refid="class_i_deck_link_deck_control_1a71022cbeb015a39b06a096b252a000dc" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>Shuttle</name></member>
      <member refid="class_i_deck_link_deck_control_1af255a1883247753f24e17aafb6ffa6d2" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>StartCapture</name></member>
      <member refid="class_i_deck_link_deck_control_1a36a1cff08e16737e4fd381128b6ccbc3" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>StartExport</name></member>
      <member refid="class_i_deck_link_deck_control_1ae1d670ea7c1bde0321a7b651fb4e55a9" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>StepBack</name></member>
      <member refid="class_i_deck_link_deck_control_1aafce062dde838c3e2cc6cae60efd6124" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>StepForward</name></member>
      <member refid="class_i_deck_link_deck_control_1aed06f50a507b729aec093b8071361709" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>Stop</name></member>
      <member refid="class_i_deck_link_deck_control_1aa4e7bab7aff00b8b8e5b9e095d83d771" prot="public" virt="pure-virtual"><scope>IDeckLinkDeckControl</scope><name>TogglePlayStop</name></member>
      <member refid="class_i_deck_link_deck_control_1a09b1158b2515a6c0b9ca5d4ea2611f47" prot="protected" virt="virtual"><scope>IDeckLinkDeckControl</scope><name>~IDeckLinkDeckControl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
