[ 44%] Built target decklink
[ 70%] Built target img2ros
[ 70%] Built target deckview
[ 74%] Built target deckquery
[ 77%] Built target deckmonitor
[ 81%] Built target deckstatus
[ 88%] Built target deckoutput
[ 92%] [32mBuilding CXX object CMakeFiles/publisher.dir/src/publisher.cpp.o[0m
[ 96%] [32mBuilding CXX object CMakeFiles/publisher.dir/src/decklink_camera_driver.cpp.o[0m
In file included from [01m[K/home/mhenkel/Documents/hi_decklink_ros2/src/publisher.cpp:6[m[K:
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/include/decklink_camera_driver.hpp:24:5:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[K_it[m[Kâ€™ does not name a type
   24 |     [01;31m[K_it[m[K = nullptr;
      |     [01;31m[K^~~[m[K
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/include/decklink_camera_driver.hpp:[m[K In member function â€˜[01m[Kvoid DeckLinkCameraDriver::[01;32m[Kon_start_capture_request[m[K(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)[m[Kâ€™:
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/include/decklink_camera_driver.hpp:49:58:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Krequest[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
   49 |     [01;35m[Kconst std::shared_ptr<std_srvs::srv::Empty::Request> request[m[K,
      |     [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~[m[K
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/include/decklink_camera_driver.hpp:50:53:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kresponse[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
   50 |     [01;35m[Kstd::shared_ptr<std_srvs::srv::Empty::Response> response[m[K)
      |     [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~[m[K
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/include/decklink_camera_driver.hpp:[m[K In member function â€˜[01m[Kvoid DeckLinkCameraDriver::[01;32m[Kon_stop_capture_request[m[K(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)[m[Kâ€™:
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/include/decklink_camera_driver.hpp:59:58:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Krequest[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
   59 |     [01;35m[Kconst std::shared_ptr<std_srvs::srv::Empty::Request> request[m[K,
      |     [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~[m[K
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/include/decklink_camera_driver.hpp:60:53:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kresponse[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
   60 |     [01;35m[Kstd::shared_ptr<std_srvs::srv::Empty::Response> response[m[K)
      |     [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~[m[K
In file included from [01m[K/home/mhenkel/Documents/hi_decklink_ros2/src/decklink_camera_driver.cpp:9[m[K:
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/include/decklink_camera_driver.hpp:24:5:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[K_it[m[Kâ€™ does not name a type
   24 |     [01;31m[K_it[m[K = nullptr;
      |     [01;31m[K^~~[m[K
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/include/decklink_camera_driver.hpp:[m[K In member function â€˜[01m[Kvoid DeckLinkCameraDriver::[01;32m[Kon_start_capture_request[m[K(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)[m[Kâ€™:
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/include/decklink_camera_driver.hpp:49:58:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Krequest[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
   49 |     [01;35m[Kconst std::shared_ptr<std_srvs::srv::Empty::Request> request[m[K,
      |     [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~[m[K
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/include/decklink_camera_driver.hpp:50:53:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kresponse[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
   50 |     [01;35m[Kstd::shared_ptr<std_srvs::srv::Empty::Response> response[m[K)
      |     [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~[m[K
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/include/decklink_camera_driver.hpp:[m[K In member function â€˜[01m[Kvoid DeckLinkCameraDriver::[01;32m[Kon_stop_capture_request[m[K(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)[m[Kâ€™:
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/include/decklink_camera_driver.hpp:59:58:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Krequest[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
   59 |     [01;35m[Kconst std::shared_ptr<std_srvs::srv::Empty::Request> request[m[K,
      |     [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~[m[K
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/include/decklink_camera_driver.hpp:60:53:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kresponse[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
   60 |     [01;35m[Kstd::shared_ptr<std_srvs::srv::Empty::Response> response[m[K)
      |     [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~[m[K
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/src/decklink_camera_driver.cpp:[m[K In constructor â€˜[01m[KDeckLinkCameraDriver::[01;32m[KDeckLinkCameraDriver[m[K()[m[Kâ€™:
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/src/decklink_camera_driver.cpp:84:42:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KDeckLinkCameraDriver::create_service(const char [14], void (DeckLinkCameraDriver::*)(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >), DeckLinkCameraDriver*)[m[Kâ€™
   84 |     _start_capture = [01;31m[Kthis->create_service("start_capture",[m[K
      |                      [01;31m[K~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
   85 | [01;31m[K        &DeckLinkCameraDriver::on_start_capture_request, this)[m[K;
      |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172[m[K,
                 from [01m[K/home/mhenkel/Documents/hi_decklink_ros2/include/decklink_camera_driver.hpp:10[m[K:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node.hpp:302:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ServiceT, class CallbackT> typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr)[m[Kâ€™
  302 |   [01;36m[Kcreate_service[m[K(
      |   [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node.hpp:302:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/src/decklink_camera_driver.cpp:84:42:[m[K [01;36m[Knote: [m[K  couldnâ€™t deduce template parameter â€˜[01m[KServiceT[m[Kâ€™
   84 |     _start_capture = [01;36m[Kthis->create_service("start_capture",[m[K
      |                      [01;36m[K~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
   85 | [01;36m[K        &DeckLinkCameraDriver::on_start_capture_request, this)[m[K;
      |         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node.hpp:1663[m[K:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:175:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ServiceT, class CallbackT> typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr)[m[Kâ€™
  175 | [01;36m[KNode[m[K::create_service(
      | [01;36m[K^~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:175:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/src/decklink_camera_driver.cpp:84:42:[m[K [01;36m[Knote: [m[K  couldnâ€™t deduce template parameter â€˜[01m[KServiceT[m[Kâ€™
   84 |     _start_capture = [01;36m[Kthis->create_service("start_capture",[m[K
      |                      [01;36m[K~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
   85 | [01;36m[K        &DeckLinkCameraDriver::on_start_capture_request, this)[m[K;
      |         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/src/decklink_camera_driver.cpp:86:41:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KDeckLinkCameraDriver::create_service(const char [13], void (DeckLinkCameraDriver::*)(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >), DeckLinkCameraDriver*)[m[Kâ€™
   86 |     _stop_capture = [01;31m[Kthis->create_service("stop_capture",[m[K
      |                     [01;31m[K~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~[m[K
   87 | [01;31m[K        &DeckLinkCameraDriver::on_stop_capture_request, this)[m[K;
      |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node.hpp:302:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ServiceT, class CallbackT> typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr)[m[Kâ€™
  302 |   [01;36m[Kcreate_service[m[K(
      |   [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node.hpp:302:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/src/decklink_camera_driver.cpp:86:41:[m[K [01;36m[Knote: [m[K  couldnâ€™t deduce template parameter â€˜[01m[KServiceT[m[Kâ€™
   86 |     _stop_capture = [01;36m[Kthis->create_service("stop_capture",[m[K
      |                     [01;36m[K~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~[m[K
   87 | [01;36m[K        &DeckLinkCameraDriver::on_stop_capture_request, this)[m[K;
      |         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:175:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ServiceT, class CallbackT> typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr)[m[Kâ€™
  175 | [01;36m[KNode[m[K::create_service(
      | [01;36m[K^~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:175:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/src/decklink_camera_driver.cpp:86:41:[m[K [01;36m[Knote: [m[K  couldnâ€™t deduce template parameter â€˜[01m[KServiceT[m[Kâ€™
   86 |     _stop_capture = [01;36m[Kthis->create_service("stop_capture",[m[K
      |                     [01;36m[K~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~[m[K
   87 | [01;36m[K        &DeckLinkCameraDriver::on_stop_capture_request, this)[m[K;
      |         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
gmake[2]: *** [CMakeFiles/publisher.dir/build.make:76: CMakeFiles/publisher.dir/src/publisher.cpp.o] Error 1
gmake[2]: *** Waiting for unfinished jobs....
In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/service.hpp:37[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:28[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21[m[K:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = std::_Bind<void (DeckLinkCameraDriver::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Empty][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Empty; CallbackT = std::_Bind<void (DeckLinkCameraDriver::*(std::shared_ptr<Node>, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Empty> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Empty; CallbackT = std::_Bind<void (DeckLinkCameraDriver::*(std::shared_ptr<Node>, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Empty> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Empty; CallbackT = std::_Bind<void (DeckLinkCameraDriver::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Empty> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/src/decklink_camera_driver.cpp:27:64:[m[K   required from here
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:78:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Empty> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Empty>::SharedPtrCallback>(std::_Bind<void (DeckLinkCameraDriver::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>&)[m[Kâ€™
   78 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:29[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:24[m[K:
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Empty> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/usr/include/c++/13/bits/stl_pair.h:60[m[K,
                 from [01m[K/usr/include/c++/13/bits/stl_algobase.h:64[m[K,
                 from [01m[K/usr/include/c++/13/algorithm:60[m[K,
                 from [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/image__struct.hpp:11[m[K,
                 from [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/image.hpp:7[m[K,
                 from [01m[K/opt/ros/jazzy/include/cv_bridge/cv_bridge/cv_bridge.hpp:40[m[K,
                 from [01m[K/home/mhenkel/Documents/hi_decklink_ros2/src/decklink_camera_driver.cpp:5[m[K:
/usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Empty> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>; _Args = {std::_Bind<void (DeckLinkCameraDriver::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>&}][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:78:52:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = std::_Bind<void (DeckLinkCameraDriver::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Empty][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Empty; CallbackT = std::_Bind<void (DeckLinkCameraDriver::*(std::shared_ptr<Node>, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Empty> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Empty; CallbackT = std::_Bind<void (DeckLinkCameraDriver::*(std::shared_ptr<Node>, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Empty> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Empty; CallbackT = std::_Bind<void (DeckLinkCameraDriver::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Empty> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/src/decklink_camera_driver.cpp:27:64:[m[K   required from here
[01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>&>[m[Kâ€™
 2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = std::_Bind<void (DeckLinkCameraDriver::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Empty][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Empty; CallbackT = std::_Bind<void (DeckLinkCameraDriver::*(std::shared_ptr<Node>, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Empty> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Empty; CallbackT = std::_Bind<void (DeckLinkCameraDriver::*(std::shared_ptr<Node>, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Empty> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Empty; CallbackT = std::_Bind<void (DeckLinkCameraDriver::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Empty> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/src/decklink_camera_driver.cpp:27:64:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Empty> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:78:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::_Bind<void (DeckLinkCameraDriver::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>[m[Kâ€™ is not derived from â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™
   78 |       [01;36m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Empty> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:78:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Empty> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
   78 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:78:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Empty>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Empty> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:78:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Empty> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
   78 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:78:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Empty>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Empty> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                                 [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:78:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Empty> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
   78 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:78:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Empty>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Empty> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                           [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = void][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1616:36:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>), void> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Empty> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>; _Args = <missing>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:78:52:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = std::_Bind<void (DeckLinkCameraDriver::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Empty][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Empty; CallbackT = std::_Bind<void (DeckLinkCameraDriver::*(std::shared_ptr<Node>, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Empty> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Empty; CallbackT = std::_Bind<void (DeckLinkCameraDriver::*(std::shared_ptr<Node>, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Empty> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Empty; CallbackT = std::_Bind<void (DeckLinkCameraDriver::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<std_srvs::srv::Empty_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Empty_Response_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Empty> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/mhenkel/Documents/hi_decklink_ros2/src/decklink_camera_driver.cpp:27:64:[m[K   required from here
[01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
 2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~[m[K
gmake[2]: *** [CMakeFiles/publisher.dir/build.make:90: CMakeFiles/publisher.dir/src/decklink_camera_driver.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:168: CMakeFiles/publisher.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
